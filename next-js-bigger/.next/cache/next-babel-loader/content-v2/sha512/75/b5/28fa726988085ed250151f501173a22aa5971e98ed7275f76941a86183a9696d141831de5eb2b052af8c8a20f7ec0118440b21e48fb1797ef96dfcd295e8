{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alarovoi\\\\Desktop\\\\projects\\\\udemy-react-course\\\\next-js-bigger\\\\pages\\\\meetups\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst SingleMeetup = props => {\n  const {\n    meetupId,\n    image,\n    title,\n    address,\n    description\n  } = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Check some meetups, BITCH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      meetupId: meetupId,\n      imageUrl: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://mthrfckr:Eh7TpGltO4Yy6Q7e@cluster0.l1nje.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const collection = client.db('meetups').collection('meetups');\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  await client.close();\n  return {\n    fallback: 'blocking',\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async ctx => {\n  const meetupId = ctx.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://mthrfckr:Eh7TpGltO4Yy6Q7e@cluster0.l1nje.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const collection = client.db(\"meetups\").collection(\"meetups\");\n  const meetup = await collection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(meetup);\n  await client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: meetup.image,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n};\nexport default SingleMeetup;","map":{"version":3,"sources":["C:/Users/alarovoi/Desktop/projects/udemy-react-course/next-js-bigger/pages/meetups/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Head","SingleMeetup","props","meetupId","image","title","address","description","meetupData","getStaticPaths","client","connect","collection","db","meetups","find","_id","toArray","close","fallback","paths","map","m","params","toString","getStaticProps","ctx","meetup","findOne","console","log","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,0CAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA;AAAlC,MAAiDL,KAAK,CAACM,UAA7D;AAEA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQH;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,YAAD;AACI,MAAA,QAAQ,EAAEF,QADd;AAEI,MAAA,QAAQ,EAAEC,KAFd;AAGI,MAAA,KAAK,EAAEC,KAHX;AAII,MAAA,OAAO,EAAEC,OAJb;AAKI,MAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAkBH,CArBD;;AAuBA,OAAO,MAAME,cAAc,GAAG,YAAY;AACtC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,gHAApB,CAArB;AACA,QAAMC,UAAU,GAAGF,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqBD,UAArB,CAAgC,SAAhC,CAAnB;AAEA,QAAME,OAAO,GAAG,MAAMF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAApB,EAA8BC,OAA9B,EAAtB;AAEA,QAAMP,MAAM,CAACQ,KAAP,EAAN;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,CAAC,KAAK;AACrBC,MAAAA,MAAM,EAAE;AACJpB,QAAAA,QAAQ,EAAEmB,CAAC,CAACN,GAAF,CAAMQ,QAAN;AADN;AADa,KAAL,CAAb;AAFJ,GAAP;AAQH,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,GAAP,IAAe;AACzC,QAAMvB,QAAQ,GAAGuB,GAAG,CAACH,MAAJ,CAAWpB,QAA5B;AAEA,QAAMO,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,gHAApB,CAArB;AAEA,QAAMC,UAAU,GAAGF,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqBD,UAArB,CAAgC,SAAhC,CAAnB;AAEA,QAAMe,MAAM,GAAG,MAAMf,UAAU,CAACgB,OAAX,CAAmB;AAACZ,IAAAA,GAAG,EAAEjB,QAAQ,CAACI,QAAD;AAAd,GAAnB,CAArB;AACA0B,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,QAAMjB,MAAM,CAACQ,KAAP,EAAN;AAEA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHM,MAAAA,UAAU,EAAE;AACRuB,QAAAA,EAAE,EAAE5B,QADI;AAERC,QAAAA,KAAK,EAAEuB,MAAM,CAACvB,KAFN;AAGRC,QAAAA,KAAK,EAAEsB,MAAM,CAACtB,KAHN;AAIRC,QAAAA,OAAO,EAAEqB,MAAM,CAACrB,OAJR;AAKRC,QAAAA,WAAW,EAAEoB,MAAM,CAACpB;AALZ;AADT;AADJ,GAAP;AAWH,CAvBM;AA0BP,eAAeN,YAAf","sourcesContent":["import MeetupDetail from \"../../../components/meetups/MeetupDetail\";\r\nimport {MongoClient, ObjectId} from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nconst SingleMeetup = (props) => {\r\n    const {meetupId, image, title, address, description} = props.meetupData\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{title}</title>\r\n                <meta\r\n                    name='description'\r\n                    content='Check some meetups, BITCH'\r\n                />\r\n            </Head>\r\n            <MeetupDetail\r\n                meetupId={meetupId}\r\n                imageUrl={image}\r\n                title={title}\r\n                address={address}\r\n                description={description}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n    const client = await MongoClient.connect(\"mongodb+srv://mthrfckr:Eh7TpGltO4Yy6Q7e@cluster0.l1nje.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\")\r\n    const collection = client.db('meetups').collection('meetups')\r\n\r\n    const meetups = await collection.find({}, {_id: 1}).toArray()\r\n\r\n    await client.close()\r\n\r\n    return {\r\n        fallback: 'blocking',\r\n        paths: meetups.map(m => ({\r\n            params: {\r\n                meetupId: m._id.toString()\r\n            }\r\n        }))\r\n    }\r\n}\r\n\r\nexport const getStaticProps = async (ctx) => {\r\n    const meetupId = ctx.params.meetupId\r\n\r\n    const client = await MongoClient.connect(\"mongodb+srv://mthrfckr:Eh7TpGltO4Yy6Q7e@cluster0.l1nje.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\")\r\n\r\n    const collection = client.db(\"meetups\").collection(\"meetups\");\r\n\r\n    const meetup = await collection.findOne({_id: ObjectId(meetupId)})\r\n    console.log(meetup)\r\n\r\n    await client.close()\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetupId,\r\n                image: meetup.image,\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                description: meetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SingleMeetup;\r\n"]},"metadata":{},"sourceType":"module"}